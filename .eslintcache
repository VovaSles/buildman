[{"/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/index.js":"1","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/App.js":"2","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/reportWebVitals.js":"3","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/pages/HomePage/HomePage.js":"4","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/pages/RecipesPage/RecipesPage.js":"5","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/pages/SignupPage/SignupPage.js":"6","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/pages/LoginPage/LoginPage.js":"7","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/components/RecipeNavbar/RecipeNavbr.js":"8","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/components/RecipeCard/RecipeCard.js":"9","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/components/NewRecipeModal/NewRecipeModal.js":"10"},{"size":547,"mtime":1610005652015,"results":"11","hashOfConfig":"12"},{"size":1940,"mtime":1610021247043,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1610001689556,"results":"14","hashOfConfig":"12"},{"size":556,"mtime":1610013102855,"results":"15","hashOfConfig":"12"},{"size":1344,"mtime":1610020737141,"results":"16","hashOfConfig":"12"},{"size":149,"mtime":1610005277326,"results":"17","hashOfConfig":"12"},{"size":2306,"mtime":1610015181388,"results":"18","hashOfConfig":"12"},{"size":962,"mtime":1610007968108,"results":"19","hashOfConfig":"12"},{"size":503,"mtime":1610017971871,"results":"20","hashOfConfig":"12"},{"size":3009,"mtime":1610264459221,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"19pawtj",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/index.js",[],["46","47"],"/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/App.js",["48"],"import { useState } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport HomePage from './pages/HomePage/HomePage';\nimport LoginPage from './pages/LoginPage/LoginPage';\nimport RecipesPage from './pages/RecipesPage/RecipesPage';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport jsonUsers from './data/users.json';\nimport jsonRecipes from './data/recipes.json';\n\n\nfunction App() {\n  const [users, setUsers] = useState(jsonUsers);        // HACK ALERT: holding all users as state only because this is a JSON based application (no server side)\n  const [activeUser, setActiveUser] = useState(jsonUsers[0]);   // During development it's conveient to be logged in by default\n  const [recipes, setRecipes] = useState(jsonRecipes);  // HACK ALERT: holding all recipes as state only because this is a JSON based application (no server side)\n  \n\n  function handleLogout() {\n    setActiveUser(null);\n  }\n\n  function handleLogin(loggedinUser) {\n    setActiveUser(loggedinUser);\n  }\n\n  function addRecipe(name, desc, img) {\n    const newRecipe = {\n      id: recipes[recipes.length - 1].id + 1,\n      name,\n      desc,\n      img,\n      userId: activeUser.id\n    }\n\n    setRecipes(recipes.concat(newRecipe));\n  }\n\n  const activeUserReciepes = activeUser ? recipes.filter(recipe => recipe.userId === activeUser.id) : [];\n\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\"><HomePage activeUser={activeUser} onLogout={handleLogout}/></Route>\n        <Route exact path=\"/login\"><LoginPage activeUser={activeUser} users={users} onLogin={handleLogin}/></Route>\n        <Route exact path=\"/signup\"><SignupPage activeUser={activeUser}/></Route>\n        <Route exact path=\"/recipes\"><RecipesPage activeUser={activeUser} onLogout={handleLogout} \n          recipes={activeUserReciepes} addRecipe={addRecipe}/></Route>\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/reportWebVitals.js",[],"/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/pages/HomePage/HomePage.js",[],"/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/pages/RecipesPage/RecipesPage.js",[],"/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/pages/SignupPage/SignupPage.js",[],"/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/pages/LoginPage/LoginPage.js",["49"],"import { useState } from \"react\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport './LoginPage.css'\n\nfunction LoginPage(props) {\n    const [email, setEmail] = useState(\"john@john.com\");\n    const [pwd, setPwd] = useState(\"123\");\n    const [showLoginError, setShowLoginError] = useState(false);\n    const [redirectToRecipes, setRedirectToRecipes] = useState(false);\n    const {users, onLogin} = props;\n    \n    function login() {\n        \n        // Check if the login is value (if a user with the same\n        // email and pws exists in the users array)\n        const userFound = users.find(user => user.email.toLowerCase() === email.toLowerCase() && user.pwd == pwd);\n        if (userFound) {\n            // Trigger onLogin event prop + update redirect state so we will redirect to recipes page\n            onLogin(userFound);\n            setRedirectToRecipes(true);\n        } else {\n            // show an error alert\n            setShowLoginError(true);\n        }\n    }\n\n\n    if (redirectToRecipes) {\n        return <Redirect to=\"/recipes\"/>;\n    }\n\n    return (\n        <div className=\"p-login\">\n            <h1>Login to Recipe Book</h1>\n            <p>or <Link to=\"/signup\">create an account</Link></p>\n            {showLoginError ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\n            <Form>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} />\n                    <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\n                </Form.Group>\n               \n                <Button variant=\"success\" type=\"button\" block onClick={login}>\n                    Login\n                </Button>\n            </Form>\n        </div>\n    )\n\n}\n\nexport default LoginPage;","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/components/RecipeNavbar/RecipeNavbr.js",["50","51"],"import { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\n\n\nfunction RecipeNavbr(props) {\n    const {activeUser, onLogout} = props;\n\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#/\">Recipe Book</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    {activeUser ? <Nav.Link href=\"#/recipes\">Recipes</Nav.Link> : null}\n                </Nav>\n                <Nav className=\"ml-auto\">\n                    {activeUser ? null : <Nav.Link href=\"#/login\">Login</Nav.Link>}\n                    {activeUser ? null : <Nav.Link href=\"#/signup\">Signup</Nav.Link>}\n                    {activeUser ? <Nav.Link href=\"javascript:void(0)\" onClick={() => onLogout()}>Logout</Nav.Link> : null}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}\n\nexport default RecipeNavbr;","/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/components/RecipeCard/RecipeCard.js",[],"/Users/nirchannes/Documents/Course Nov 2020/recipe-book-react-v4/src/components/NewRecipeModal/NewRecipeModal.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":13,"column":17,"nodeType":"58","messageId":"59","endLine":13,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":17,"column":107,"nodeType":"62","messageId":"63","endLine":17,"endColumn":109},{"ruleId":"56","severity":1,"message":"64","line":1,"column":23,"nodeType":"58","messageId":"59","endLine":1,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":18,"column":50,"nodeType":"67","messageId":"68","endLine":18,"endColumn":70},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'setUsers' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavDropdown' is defined but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]