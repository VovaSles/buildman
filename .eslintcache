[{"C:\\Users\\User\\react\\homeapp\\src\\index.js":"1","C:\\Users\\User\\react\\homeapp\\src\\App.js":"2","C:\\Users\\User\\react\\homeapp\\src\\reportWebVitals.js":"3","C:\\Users\\User\\react\\homeapp\\src\\model\\UserModel.js":"4","C:\\Users\\User\\react\\homeapp\\src\\pages\\HomePage\\HomePage.js":"5","C:\\Users\\User\\react\\homeapp\\src\\pages\\LoginPage\\LoginPage.js":"6","C:\\Users\\User\\react\\homeapp\\src\\pages\\RecipesPage\\RecipesPage.js":"7","C:\\Users\\User\\react\\homeapp\\src\\pages\\SignupPage\\SignupPage.js":"8","C:\\Users\\User\\react\\homeapp\\src\\pages\\UsersPage\\UsersPage.js":"9","C:\\Users\\User\\react\\homeapp\\src\\components\\AppNavbar\\AppNavbr.js":"10","C:\\Users\\User\\react\\homeapp\\src\\components\\NewUserModal\\NewUserModal.js":"11","C:\\Users\\User\\react\\homeapp\\src\\components\\UserCard\\UserCard.js":"12","C:\\Users\\User\\react\\homeapp\\src\\pages\\MessagesPage\\MessagesPage.js":"13","C:\\Users\\User\\react\\homeapp\\src\\model\\MessageModel.js":"14","C:\\Users\\User\\react\\homeapp\\src\\components\\MessageCard\\MessageCard.js":"15","C:\\Users\\User\\react\\homeapp\\src\\pages\\VotingsPage\\VotingsPage.js":"16","C:\\Users\\User\\react\\homeapp\\src\\model\\VotingModel.js":"17","C:\\Users\\User\\react\\homeapp\\src\\components\\VotingCard\\VotingCard.js":"18","C:\\Users\\User\\react\\homeapp\\src\\components\\VotingResultsCard\\VoitingResultsCard.js":"19"},{"size":858,"mtime":1610542652824,"results":"20","hashOfConfig":"21"},{"size":1740,"mtime":1611138039734,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1610363235234,"results":"23","hashOfConfig":"21"},{"size":379,"mtime":1610718845092,"results":"24","hashOfConfig":"21"},{"size":541,"mtime":1610545830380,"results":"25","hashOfConfig":"21"},{"size":2467,"mtime":1610706718578,"results":"26","hashOfConfig":"21"},{"size":2467,"mtime":1610530531520,"results":"27","hashOfConfig":"21"},{"size":5181,"mtime":1611171936226,"results":"28","hashOfConfig":"21"},{"size":3676,"mtime":1611134810537,"results":"29","hashOfConfig":"21"},{"size":1565,"mtime":1611171698713,"results":"30","hashOfConfig":"21"},{"size":2740,"mtime":1610885490102,"results":"31","hashOfConfig":"21"},{"size":452,"mtime":1611220510380,"results":"32","hashOfConfig":"21"},{"size":2665,"mtime":1611165714763,"results":"33","hashOfConfig":"21"},{"size":416,"mtime":1610971485542,"results":"34","hashOfConfig":"21"},{"size":669,"mtime":1611165274028,"results":"35","hashOfConfig":"21"},{"size":1787,"mtime":1611226634252,"results":"36","hashOfConfig":"21"},{"size":492,"mtime":1611219146745,"results":"37","hashOfConfig":"21"},{"size":1024,"mtime":1611222328342,"results":"38","hashOfConfig":"21"},{"size":700,"mtime":1611225328040,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"zw1j2u",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},"C:\\Users\\User\\react\\homeapp\\src\\index.js",[],["85","86"],"C:\\Users\\User\\react\\homeapp\\src\\App.js",[],"C:\\Users\\User\\react\\homeapp\\src\\reportWebVitals.js",[],"C:\\Users\\User\\react\\homeapp\\src\\model\\UserModel.js",[],"C:\\Users\\User\\react\\homeapp\\src\\pages\\HomePage\\HomePage.js",[],"C:\\Users\\User\\react\\homeapp\\src\\pages\\LoginPage\\LoginPage.js",[],"C:\\Users\\User\\react\\homeapp\\src\\pages\\RecipesPage\\RecipesPage.js",[],["87","88"],"C:\\Users\\User\\react\\homeapp\\src\\pages\\SignupPage\\SignupPage.js",["89"],"import { useState } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Parse from 'parse';\r\nimport AppNavbar from '../../components/AppNavbar/AppNavbr';\r\nimport UserModel from \"../../model/UserModel\";\r\n\r\nfunction SignupPage(props) {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pwd, setPwd] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [street, setStreet] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n    const [apartment, setApartment] = useState(\"\");\r\n    const [buildingId, setSetBuildingId] = useState(\"\");\r\n\r\n    const [showSignupError, setShowSignupError] = useState(false);\r\n    const [redirectToUsers, setRedirectToUsers] = useState(false);\r\n    const { activeUser, onLogin } = props;\r\n\r\n\r\n    async function Signup() {\r\n        // Create a new instance of the building class\r\n        const Building = await Parse.Object.extend('building');\r\n        const building = new Building();\r\n        building.set('city', city);\r\n        building.set('street', street);\r\n        building.set('number', number);\r\n        const newBuilding = await building.save();\r\n        //ask at Nir about this\r\n        \r\n        // Create a new instance of the user class\r\n        const user = new Parse.User();\r\n        user.set(\"username\", username);\r\n        user.set(\"password\", pwd);\r\n        user.set(\"email\", email);\r\n        user.set(\"isAdmin\", true);\r\n        user.set(\"buildingId\", building.id);\r\n        setSetBuildingId(building.id)\r\n        user.set(\"apartment\", apartment);\r\n        try{\r\n            const parseUser = await user.signUp()\r\n            onLogin(new UserModel(parseUser));\r\n            setRedirectToUsers(true);\r\n        } catch (error) {\r\n            setShowSignupError(true);\r\n            const building = Parse.Object.extend('building');\r\n            const query = new Parse.Query(building);\r\n            // here you put the objectId that you want to delete\r\n            const object = await query.get(buildingId);\r\n            const response = await object.destroy();\r\n            console.log(response )\r\n               \r\n      \r\n \r\n        }\r\n}\r\n\r\n\r\n\r\n\r\nif (redirectToUsers) {\r\n    return <Redirect to=\"/users\" />;\r\n}\r\n\r\nreturn (\r\n    <>\r\n        <AppNavbar activeUser={activeUser} />\r\n        <div className=\"p-login\">\r\n            <h1>Sign up to Home App</h1>\r\n            {showSignupError ? <Alert variant=\"danger\">Invalid Credentials!</Alert> : null}\r\n            <Form>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n                    <Form.Text className=\"text-muted\">\r\n                        We'll never share your email with anyone else.\r\n                    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" value={pwd} onChange={e => setPwd(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicUsername\">\r\n                    <Form.Label>User Name</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"user Name\" value={username} onChange={e => setUsername(e.target.value)} />\r\n                </Form.Group>\r\n                <div  className=\"d-flex justify-content-between align-items-center\">\r\n                <Form.Group controlId=\"formBasicUserCity\">\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"City\" value={city} onChange={e => setCity(e.target.value)} />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicUserStreet\">\r\n                    <Form.Label>Street</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Street\" value={street} onChange={e => setStreet(e.target.value)} />\r\n                </Form.Group>\r\n                </div>\r\n                <div  className=\"d-flex justify-content-between align-items-center\">\r\n             \r\n\r\n                <Form.Group controlId=\"formBasicUserHomeNumber\">\r\n                    <Form.Label>Building number</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Building number\" value={number} onChange={e => setNumber(e.target.value)} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicUserHomeNumber\">\r\n                    <Form.Label>Apartment number</Form.Label>\r\n                    <Form.Control type=\"text\" placeholder=\"Apartment number\" value={apartment} onChange={e => setApartment(e.target.value)} />\r\n                </Form.Group>\r\n                </div>\r\n                <Button variant=\"success\" type=\"button\" block onClick={Signup}>\r\n                    Sign up\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    </>\r\n)\r\n\r\n}\r\n\r\nexport default SignupPage;","C:\\Users\\User\\react\\homeapp\\src\\pages\\UsersPage\\UsersPage.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\AppNavbar\\AppNavbr.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\NewUserModal\\NewUserModal.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\UserCard\\UserCard.js",[],"C:\\Users\\User\\react\\homeapp\\src\\pages\\MessagesPage\\MessagesPage.js",["90"],"import React, { useState, useEffect } from 'react'\r\nimport AppNavbr from \"../../components/AppNavbar/AppNavbr\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Parse from 'parse';\r\nimport { Container, Form, FormControl, Button } from \"react-bootstrap\";\r\nimport MessageModel from '../../model/MessageModel';\r\nimport MessageCard from '../../components/MessageCard/MessageCard';\r\n\r\nfunction MessagesPage(props) {\r\n    const { activeUser, onLogout } = props;\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageText, setMessageText] = useState(\"\");\r\n\r\n\r\n    //fetching messages from parse\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const ParseMessage = Parse.Object.extend('message');\r\n            const query = new Parse.Query(ParseMessage);\r\n            query.equalTo(\"buildingId\", activeUser.buildingId);\r\n            const ParseMessages = await query.find();\r\n            setMessages(ParseMessages.map(parseMessage => new MessageModel(parseMessage)));\r\n        }\r\n\r\n        if (activeUser) {\r\n            fetchData()\r\n        }\r\n    }, [activeUser])\r\n\r\n    //adding new message\r\n    async function addMessage(message) {\r\n        const ParseMessage = Parse.Object.extend('message');\r\n        const newMessage = new ParseMessage();\r\n        newMessage.set('title', messageText);\r\n        newMessage.set('createdBy', activeUser.id);\r\n        newMessage.set('creatorName', activeUser.username);\r\n        newMessage.set('buildingId', activeUser.buildingId);\r\n\r\n\r\n        const parseMessage = await newMessage.save();\r\n        setMessageText(\"\")\r\n        setMessages(messages.concat(new MessageModel(newMessage)));\r\n    }\r\n\r\n\r\n\r\n    if (!activeUser) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n    //messages view \r\n    const messagesView = messages.map(message => <MessageCard key={message.id} message={message} user={activeUser} />)\r\n\r\n    return (\r\n        <div>\r\n            <AppNavbr activeUser={activeUser} onLogout={onLogout} />\r\n\r\n            <Container>\r\n                <h1>Messages of {activeUser.username}</h1>\r\n                \r\n            <Form className=\"d-flex justify-content-between w-100 mb-3\" inline>\r\n                <FormControl\r\n                    className=\"mr-2 w-50\"\r\n                    type=\"text\"\r\n                    placeholder=\"Write your message ....\"\r\n                    value={messageText}\r\n                    onChange={e => setMessageText(e.target.value)} />\r\n                <Button variant=\"primary\" onClick={addMessage}>Send</Button>\r\n            </Form>\r\n\r\n                {messagesView}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\nexport default MessagesPage\r\n","C:\\Users\\User\\react\\homeapp\\src\\model\\MessageModel.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\MessageCard\\MessageCard.js",["91","92","93"],"import React from 'react';\r\nimport { Accordion, Card, Container } from \"react-bootstrap\";\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\n\r\nfunction MessageCard(props) {\r\n    const { message, key} = props;\r\n  \r\n    return(\r\n        <>\r\n           \r\n        <Card>\r\n          <Card.Body>\r\n          {message.creatorName} <AccessAlarmIcon color=\"secondary\"/>\r\n               <Card.Text >{message.title}</Card.Text>\r\n               </Card.Body> \r\n               <Card.Footer className=\"text-muted\">{message.createdAt.toString().slice(4, 10)}</Card.Footer> \r\n         \r\n        </Card>\r\n  \r\n           \r\n        </>\r\n    )\r\n}\r\n\r\nexport default MessageCard\r\n","C:\\Users\\User\\react\\homeapp\\src\\pages\\VotingsPage\\VotingsPage.js",["94","95","96","97"],"C:\\Users\\User\\react\\homeapp\\src\\model\\VotingModel.js",[],"C:\\Users\\User\\react\\homeapp\\src\\components\\VotingCard\\VotingCard.js",["98","99","100"],"import React from 'react';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\nimport { Chart } from \"react-google-charts\";\r\n\r\nfunction VotingCard(props) {\r\n    const { user, voting } = props;\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Header>\r\n                    {voting.title}\r\n                </Card.Header>\r\n                <Card.Body>\r\n                   \r\n                            {voting.details}\r\n                        \r\n                        <Chart\r\n  width={'300px'}\r\n  height={'300px'}\r\n  chartType=\"PieChart\"\r\n  loader={<div>Loading Chart</div>}\r\n  data={[\r\n    ['Task', 'Hours per Day'],\r\n    ['In Fovor',voting.votes.filter(vote => vote.vote === \"in fovor\").length],\r\n    ['Against',voting.votes.filter(vote => vote.vote === \"against\").length],\r\n   \r\n  ]}\r\n  options={{\r\n    title: voting.title,\r\n  }}\r\n  rootProps={{ 'data-testid': '1' }}\r\n/>\r\n                    \r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VotingCard\r\n","C:\\Users\\User\\react\\homeapp\\src\\components\\VotingResultsCard\\VoitingResultsCard.js",["101"],"import { Button } from 'bootstrap';\r\nimport React from 'react'\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction VoitingResultsCard(props) {\r\n    const { user, voting } = props;\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <Card.Header>\r\n                  {voting.title}\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    {voting.details}\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Button variant=\"warning\">In Favor</Button>\r\n                    <Button variant=\"danger\">Against</Button>\r\n                </Card.Footer>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VoitingResultsCard\r\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"104","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":30,"column":15,"nodeType":"110","messageId":"111","endLine":30,"endColumn":26},{"ruleId":"108","severity":1,"message":"112","line":40,"column":15,"nodeType":"110","messageId":"111","endLine":40,"endColumn":27},{"ruleId":"108","severity":1,"message":"113","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":19},{"ruleId":"108","severity":1,"message":"114","line":2,"column":27,"nodeType":"110","messageId":"111","endLine":2,"endColumn":36},{"ruleId":"108","severity":1,"message":"115","line":6,"column":22,"nodeType":"110","messageId":"111","endLine":6,"endColumn":25},{"ruleId":"108","severity":1,"message":"116","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"114","line":2,"column":23,"nodeType":"110","messageId":"111","endLine":2,"endColumn":32},{"ruleId":"108","severity":1,"message":"117","line":11,"column":12,"nodeType":"110","messageId":"111","endLine":11,"endColumn":21},{"ruleId":"108","severity":1,"message":"118","line":11,"column":23,"nodeType":"110","messageId":"111","endLine":11,"endColumn":35},{"ruleId":"108","severity":1,"message":"119","line":2,"column":16,"nodeType":"110","messageId":"111","endLine":2,"endColumn":19},{"ruleId":"108","severity":1,"message":"120","line":2,"column":21,"nodeType":"110","messageId":"111","endLine":2,"endColumn":24},{"ruleId":"108","severity":1,"message":"121","line":6,"column":13,"nodeType":"110","messageId":"111","endLine":6,"endColumn":17},{"ruleId":"108","severity":1,"message":"121","line":6,"column":13,"nodeType":"110","messageId":"111","endLine":6,"endColumn":17},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],["122"],["123"],"no-unused-vars","'newBuilding' is assigned a value but never used.","Identifier","unusedVar","'parseMessage' is assigned a value but never used.","'Accordion' is defined but never used.","'Container' is defined but never used.","'key' is assigned a value but never used.","'Button' is defined but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]